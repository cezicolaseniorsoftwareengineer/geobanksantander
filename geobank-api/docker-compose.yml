# GeoBank development environment (Docker Compose)

version: "3.8"

services:
  # GeoBank API service
  geobank-api:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/geobank
      - SPRING_DATASOURCE_USERNAME=geobank
      - SPRING_DATASOURCE_PASSWORD=geobank123
      - SPRING_DATA_REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - geobank-network

  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.3-alpine
    environment:
      - POSTGRES_DB=geobank
      - POSTGRES_USER=geobank
      - POSTGRES_PASSWORD=geobank123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - geobank-network

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - geobank-network

  # Prometheus metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - geobank-network

  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - geobank-network

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  geobank-network:
    driver: bridge
